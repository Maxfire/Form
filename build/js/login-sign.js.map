{"version":3,"sources":["login-sign.js"],"names":["signupForm","document","getElementById","loginForm","loginEmail","loginPass","signupEmail","signupPass","signupPassConf","check","forms","querySelector","pwShowHide","querySelectorAll","links","resetForm","reset","checkInputsLogin","lEmailValue","value","trim","lPassValue","setErrorFor","isEmail","setSuccessFor","length","search","checkInputsSignUp","sEmailValue","sPassValue","sPassConfValue","checked","alert","input","message","formControl","parentElement","innerText","className","email","test","resetErrors","form","errorFields","forEach","field","resetSuccess","correctFields","eyeIcon","addEventListener","password","type","classList","replace","link","e","preventDefault","toggle","signupExist","console","log"],"mappings":"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","file":"login-sign.js","sourcesContent":["//Vars\r\nconst signupForm = document.getElementById('signup-form');\r\nconst loginForm = document.getElementById('login-form');\r\nconst loginEmail = document.getElementById('login-email');\r\nconst loginPass = document.getElementById('login-password');\r\nconst signupEmail = document.getElementById('signup-email');\r\nconst signupPass = document.getElementById('signup-password');\r\nconst signupPassConf = document.getElementById('signup-password-confirmation');\r\nconst check = document.getElementById('TOS-check');\r\n\r\n//Signup-Login forms\r\nconst forms = document.querySelector('.forms'),\r\n    pwShowHide = document.querySelectorAll('.eye-icon'),\r\n    links = document.querySelectorAll('.link');\r\n\r\npwShowHide.forEach(eyeIcon => {\r\n    eyeIcon.addEventListener('click', () => {\r\n        let pwFields = eyeIcon.parentElement.parentElement.querySelectorAll(\".password\");\r\n        \r\n        pwFields.forEach(password => {\r\n            if(password.type === \"password\") {\r\n                password.type = \"text\";\r\n                eyeIcon.classList.replace('bx-hide', 'bx-show');\r\n                return;\r\n            }\r\n            password.type = \"password\";\r\n            eyeIcon.classList.replace('bx-show', 'bx-hide');\r\n        });\r\n    });\r\n});\r\n\r\nfunction resetForm() {\r\n    signupForm.reset();\r\n}\r\n\r\nlinks.forEach(link => {\r\n    link.addEventListener('click', e => {\r\n        e.preventDefault(); //preventing form submit\r\n        forms.classList.toggle('show-signup');\r\n        signupForm.reset();\r\n        resetErrors(signupForm);\r\n        resetSuccess(signupForm);\r\n        loginForm.reset();\r\n        resetErrors(loginForm);\r\n        resetSuccess(loginForm);\r\n    })\r\n})\r\n\r\n\r\n\r\n//Validation \r\nforms.addEventListener('submit', (e) => {\r\n    e.preventDefault(); //preventing form submit\r\n    var signupExist = document.querySelector('.show-signup');\r\n    console.log(signupExist);\r\n    if (signupExist === null) {\r\n        checkInputsLogin();\r\n    } else {\r\n        checkInputsSignUp();\r\n    }\r\n})\r\n\r\nfunction checkInputsLogin () {\r\n    //Get the values from the inputs\r\n    const lEmailValue = loginEmail.value.trim();\r\n    const lPassValue = loginPass.value.trim(); \r\n\r\n\r\n    //Login validation\r\n    //Email\r\n    if(lEmailValue === '') {\r\n\t\tsetErrorFor(loginEmail, 'Email cannot be blank');\r\n\t} else if (!isEmail(lEmailValue)) {\r\n\t\tsetErrorFor(loginEmail, 'Not a valid email');\r\n\t} else {\r\n\t\tsetSuccessFor(loginEmail);\r\n\t}\r\n\r\n    //Password\r\n    if(lPassValue === '') {\r\n\t\tsetErrorFor(loginPass, 'Password cannot be blank');\r\n\t} else if (lPassValue.length < 8) {\r\n        setErrorFor(loginPass, 'Password must be at least 8 characters');\r\n    } else if (lPassValue.search(/[0-9]/) == -1) {\r\n        setErrorFor(loginPass, 'Password must contain at least 1 number');\r\n    } else if (lPassValue.search(/[a-z]/) == -1) {\r\n        setErrorFor(loginPass, 'Password must contain at least 1 lowercase');\r\n    } else if (lPassValue.search(/[A-Z]/) == -1) {\r\n        setErrorFor(loginPass, 'Password must contain at least 1 uppercase');\r\n    } else if (lPassValue.search(/[!\\@\\#\\$\\%\\^\\&\\<\\>\\*\\()]/) == -1) {\r\n        setErrorFor(loginPass, 'Password must contain at least 1 special character');\r\n    } else {\r\n\t\tsetSuccessFor(loginPass);\r\n\t}\r\n}\r\nfunction checkInputsSignUp () {\r\n    //Get the values from the inputs\r\n    const sEmailValue = signupEmail.value.trim();\r\n    const sPassValue = signupPass.value.trim();\r\n    const sPassConfValue = signupPassConf.value.trim();\r\n\r\n    //Signup validation\r\n    //Email\r\n    if(sEmailValue === '') {\r\n\t\tsetErrorFor(signupEmail, 'Email cannot be blank');\r\n\t} else if (!isEmail(sEmailValue)) {\r\n\t\tsetErrorFor(signupEmail, 'Not a valid email');\r\n\t} else {\r\n\t\tsetSuccessFor(signupEmail);\r\n\t}\r\n    //Password\r\n    if(sPassValue === '') {\r\n\t\tsetErrorFor(signupPass, 'Password cannot be blank');\r\n\t} else if (sPassValue.length < 8) {\r\n        setErrorFor(signupPass, 'Password must be at least 8 characters');\r\n    } else if (sPassValue.search(/[0-9]/) == -1) {\r\n        setErrorFor(signupPass, 'Password must contain at least 1 number');\r\n    } else if (sPassValue.search(/[a-z]/) == -1) {\r\n        setErrorFor(signupPass, 'Password must contain at least 1 lowercase');\r\n    } else if (sPassValue.search(/[A-Z]/) == -1) {\r\n        setErrorFor(signupPass, 'Password must contain at least 1 uppercase');\r\n    } else if (sPassValue.search(/[!\\@\\#\\$\\%\\^\\&\\<\\>\\*\\()]/) == -1) {\r\n        setErrorFor(signupPass, 'Password must contain at least 1 special character');\r\n    } else {\r\n\t\tsetSuccessFor(signupPass);\r\n\t}\r\n\r\n    if(sPassConfValue === '') {\r\n\t\tsetErrorFor(signupPassConf, 'Password cannot be blank');\r\n\t} else if(sPassValue !== sPassConfValue) {\r\n\t\tsetErrorFor(signupPassConf, 'Passwords does not match');\r\n\t} else{\r\n\t\tsetSuccessFor(signupPassConf);\r\n\t}\r\n    //Checkbox\r\n    if (!check.checked) { \r\n        alert('You must accept the terms of use from Juanito\\'s Kitchen');\r\n    }\r\n}\r\n\r\nfunction setErrorFor(input, message) {\r\n    const formControl = input.parentElement; // .field\r\n    const small = formControl.querySelector('small');\r\n    \r\n    //add error message inside small\r\n    small.innerText = message;\r\n\r\n    //add error class\r\n    formControl.className = 'field input-field error'; \r\n}\r\n\r\nfunction setSuccessFor(input) {\r\n    const formControl = input.parentElement; // .field\r\n    //add error class\r\n    formControl.className = 'field input-field correct'; \r\n}\r\n\r\nfunction isEmail(email) {\r\n\treturn /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}\r\n\r\nfunction resetErrors(form) {\r\n    errorFields = form.querySelectorAll('.error');\r\n    errorFields.forEach(field => { \r\n        field.className = 'field input-field';\r\n    });\r\n}\r\n\r\nfunction resetSuccess(form) {\r\n    correctFields = form.querySelectorAll('.correct');\r\n    correctFields.forEach(field => { \r\n        field.className = 'field input-field';\r\n    });\r\n}\r\n"]}